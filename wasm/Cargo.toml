cargo-features = ["per-package-target"]

[package]
name = "wasm"
version = "0.1.0"
authors = ["neilhansen"]
edition = "2018"
forced-target = "wasm32-unknown-unknown"


[lib]
crate-type = ["cdylib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.84"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
web-sys = { version = "0.3.64", features = [
  "AbortController",
  "AbortSignal",
  "RequestCredentials",
  "RequestInit",
  "Headers",
  "Request",
  "RequestMode",
  "Response",
  "ServiceWorkerGlobalScope",
  "CanvasRenderingContext2d",
  "HtmlCanvasElement",
  "Window",
  "Document",
  "console",
  "ImageData",
]}
js-sys = "0.3.64"
rand = "0.8.5"
getrandom = { version = "0.2.10", features = ["js"]}
rand_distr = "0.4.3"
noise = "0.8.2"
nalgebra = "0.32.3"
rapier2d = "0.17.2"
indexmap = "2.0.0"
serde_json = "1.0.105"
derive_builder = "0.12.0"
shared = { version = "0.1.0", path = "../shared" }
reqwest = "0.11.21"
anyhow = "1.0.75"
wasm-bindgen-futures = "0.4.37"
futures = "0.3.28"
once_cell = "1.18.0"
serde-wasm-bindgen = "0.6.1"

[dev-dependencies]
wasm-bindgen-test = "0.3.34"
